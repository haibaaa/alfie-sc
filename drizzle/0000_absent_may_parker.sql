CREATE TYPE "public"."account_type" AS ENUM('client', 'freelancer', 'admin');--> statement-breakpoint
CREATE TABLE "marketplace_disputes" (
	"dispute_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "marketplace_disputes_dispute_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"order_id" integer NOT NULL,
	"complainant_id" integer NOT NULL,
	"respondent_id" integer NOT NULL,
	"description" text NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "marketplace_gigs" (
	"gig_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "marketplace_gigs_gig_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"status" boolean DEFAULT true NOT NULL,
	"freelancer_id" integer NOT NULL,
	"title" varchar(256) NOT NULL,
	"description" text NOT NULL,
	"delivery_time" integer NOT NULL,
	"category" varchar(100) NOT NULL,
	"price" numeric(10, 2) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "marketplace_messages" (
	"message_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "marketplace_messages_message_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"message_time" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"message_text" text NOT NULL,
	"sender_id" integer NOT NULL,
	"receiver_id" integer NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "marketplace_orders" (
	"order_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "marketplace_orders_order_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"gig_id" integer NOT NULL,
	"client_id" integer NOT NULL,
	"payment_status" boolean DEFAULT false NOT NULL,
	"transaction_date" date DEFAULT CURRENT_DATE,
	"amount" numeric(10, 2) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "marketplace_payments" (
	"payment_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "marketplace_payments_payment_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"order_id" integer NOT NULL,
	"client_id" integer NOT NULL,
	"freelancer_id" integer NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "marketplace_reviews" (
	"review_id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "marketplace_reviews_review_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"review_date" date DEFAULT CURRENT_DATE NOT NULL,
	"rating" numeric(2, 1) NOT NULL,
	"feedback" text NOT NULL,
	"receiver_id" integer NOT NULL,
	"reviewer_id" integer NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "marketplace_users" (
	"user_id" serial PRIMARY KEY NOT NULL,
	"user_hash" varchar(255),
	"first_name" varchar(100) NOT NULL,
	"last_name" varchar(100) NOT NULL,
	"email" varchar(255) NOT NULL,
	"password" varchar(255) DEFAULT '',
	"bio" varchar(1024) DEFAULT '',
	"acc_type" "account_type" NOT NULL,
	"join_date" date DEFAULT CURRENT_DATE NOT NULL,
	"profile_picture" varchar(255) NOT NULL,
	"rating" numeric(2, 1),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone,
	CONSTRAINT "marketplace_users_email_unique" UNIQUE("email")
);
--> statement-breakpoint
ALTER TABLE "marketplace_disputes" ADD CONSTRAINT "marketplace_disputes_order_id_marketplace_orders_order_id_fk" FOREIGN KEY ("order_id") REFERENCES "public"."marketplace_orders"("order_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_disputes" ADD CONSTRAINT "marketplace_disputes_complainant_id_marketplace_users_user_id_fk" FOREIGN KEY ("complainant_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_disputes" ADD CONSTRAINT "marketplace_disputes_respondent_id_marketplace_users_user_id_fk" FOREIGN KEY ("respondent_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_gigs" ADD CONSTRAINT "marketplace_gigs_freelancer_id_marketplace_users_user_id_fk" FOREIGN KEY ("freelancer_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_messages" ADD CONSTRAINT "marketplace_messages_sender_id_marketplace_users_user_id_fk" FOREIGN KEY ("sender_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_messages" ADD CONSTRAINT "marketplace_messages_receiver_id_marketplace_users_user_id_fk" FOREIGN KEY ("receiver_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_orders" ADD CONSTRAINT "marketplace_orders_gig_id_marketplace_gigs_gig_id_fk" FOREIGN KEY ("gig_id") REFERENCES "public"."marketplace_gigs"("gig_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_orders" ADD CONSTRAINT "marketplace_orders_client_id_marketplace_users_user_id_fk" FOREIGN KEY ("client_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_payments" ADD CONSTRAINT "marketplace_payments_order_id_marketplace_orders_order_id_fk" FOREIGN KEY ("order_id") REFERENCES "public"."marketplace_orders"("order_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_payments" ADD CONSTRAINT "marketplace_payments_client_id_marketplace_users_user_id_fk" FOREIGN KEY ("client_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_payments" ADD CONSTRAINT "marketplace_payments_freelancer_id_marketplace_users_user_id_fk" FOREIGN KEY ("freelancer_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_reviews" ADD CONSTRAINT "marketplace_reviews_receiver_id_marketplace_users_user_id_fk" FOREIGN KEY ("receiver_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "marketplace_reviews" ADD CONSTRAINT "marketplace_reviews_reviewer_id_marketplace_users_user_id_fk" FOREIGN KEY ("reviewer_id") REFERENCES "public"."marketplace_users"("user_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "idx_disputes_order" ON "marketplace_disputes" USING btree ("order_id");--> statement-breakpoint
CREATE INDEX "idx_disputes_complainant" ON "marketplace_disputes" USING btree ("complainant_id");--> statement-breakpoint
CREATE INDEX "idx_disputes_respondent" ON "marketplace_disputes" USING btree ("respondent_id");--> statement-breakpoint
CREATE INDEX "idx_gigs_freelancer" ON "marketplace_gigs" USING btree ("freelancer_id");--> statement-breakpoint
CREATE INDEX "idx_gigs_category" ON "marketplace_gigs" USING btree ("category");--> statement-breakpoint
CREATE INDEX "idx_gigs_price" ON "marketplace_gigs" USING btree ("price");--> statement-breakpoint
CREATE INDEX "idx_messages_sender" ON "marketplace_messages" USING btree ("sender_id");--> statement-breakpoint
CREATE INDEX "idx_messages_receiver" ON "marketplace_messages" USING btree ("receiver_id");--> statement-breakpoint
CREATE INDEX "idx_messages_sender_receiver" ON "marketplace_messages" USING btree ("sender_id","receiver_id");--> statement-breakpoint
CREATE INDEX "idx_messages_time" ON "marketplace_messages" USING btree ("message_time");--> statement-breakpoint
CREATE INDEX "idx_orders_gig" ON "marketplace_orders" USING btree ("gig_id");--> statement-breakpoint
CREATE INDEX "idx_orders_client" ON "marketplace_orders" USING btree ("client_id");--> statement-breakpoint
CREATE INDEX "idx_orders_date" ON "marketplace_orders" USING btree ("transaction_date");--> statement-breakpoint
CREATE INDEX "idx_orders_payment_status" ON "marketplace_orders" USING btree ("payment_status");--> statement-breakpoint
CREATE INDEX "idx_payment_order" ON "marketplace_payments" USING btree ("order_id");--> statement-breakpoint
CREATE INDEX "idx_payment_client" ON "marketplace_payments" USING btree ("client_id");--> statement-breakpoint
CREATE INDEX "idx_payment_freelancer" ON "marketplace_payments" USING btree ("freelancer_id");--> statement-breakpoint
CREATE INDEX "idx_review_receiver" ON "marketplace_reviews" USING btree ("receiver_id");--> statement-breakpoint
CREATE INDEX "idx_review_reviewer" ON "marketplace_reviews" USING btree ("reviewer_id");--> statement-breakpoint
CREATE INDEX "idx_review_rating" ON "marketplace_reviews" USING btree ("rating");--> statement-breakpoint
CREATE INDEX "idx_review_date" ON "marketplace_reviews" USING btree ("review_date");--> statement-breakpoint
CREATE INDEX "idx_users_name" ON "marketplace_users" USING btree ("last_name","first_name");--> statement-breakpoint
CREATE INDEX "idx_users_acc_type" ON "marketplace_users" USING btree ("acc_type");--> statement-breakpoint
CREATE INDEX "idx_users_rating" ON "marketplace_users" USING btree ("rating");